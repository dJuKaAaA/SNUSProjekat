//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trending.CoreReportServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagReport", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Models")]
    [System.SerializableAttribute()]
    public partial class TagReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.CoreReportServiceRef.IOType TagTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.CoreReportServiceRef.IOType TagType {
            get {
                return this.TagTypeField;
            }
            set {
                if ((this.TagTypeField.Equals(value) != true)) {
                    this.TagTypeField = value;
                    this.RaisePropertyChanged("TagType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IOType", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Execptions")]
    public enum IOType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnalogInput = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnalogOutput = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DigitalInput = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DigitalOutput = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmReport", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Models")]
    [System.SerializableAttribute()]
    public partial class AlarmReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.CoreReportServiceRef.TagAlarm TagAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmId {
            get {
                return this.AlarmIdField;
            }
            set {
                if ((this.AlarmIdField.Equals(value) != true)) {
                    this.AlarmIdField = value;
                    this.RaisePropertyChanged("AlarmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.CoreReportServiceRef.TagAlarm TagAlarm {
            get {
                return this.TagAlarmField;
            }
            set {
                if ((object.ReferenceEquals(this.TagAlarmField, value) != true)) {
                    this.TagAlarmField = value;
                    this.RaisePropertyChanged("TagAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagAlarm", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Models")]
    [System.SerializableAttribute()]
    public partial class TagAlarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlarmNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.CoreReportServiceRef.AnalogInput AnalogInputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.CoreReportServiceRef.PriorityType PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.CoreReportServiceRef.AlarmType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmName {
            get {
                return this.AlarmNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmNameField, value) != true)) {
                    this.AlarmNameField = value;
                    this.RaisePropertyChanged("AlarmName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.CoreReportServiceRef.AnalogInput AnalogInput {
            get {
                return this.AnalogInputField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalogInputField, value) != true)) {
                    this.AnalogInputField = value;
                    this.RaisePropertyChanged("AnalogInput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.CoreReportServiceRef.PriorityType Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.CoreReportServiceRef.AlarmType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalogInput", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Models")]
    [System.SerializableAttribute()]
    public partial class AnalogInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.CoreReportServiceRef.TagAlarm[] AlarmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.CoreReportServiceRef.DriverType DriverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IOAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnScanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScanTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.CoreReportServiceRef.TagAlarm[] Alarms {
            get {
                return this.AlarmsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmsField, value) != true)) {
                    this.AlarmsField = value;
                    this.RaisePropertyChanged("Alarms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.CoreReportServiceRef.DriverType DriverType {
            get {
                return this.DriverTypeField;
            }
            set {
                if ((this.DriverTypeField.Equals(value) != true)) {
                    this.DriverTypeField = value;
                    this.RaisePropertyChanged("DriverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighLimit {
            get {
                return this.HighLimitField;
            }
            set {
                if ((this.HighLimitField.Equals(value) != true)) {
                    this.HighLimitField = value;
                    this.RaisePropertyChanged("HighLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IOAddress {
            get {
                return this.IOAddressField;
            }
            set {
                if ((this.IOAddressField.Equals(value) != true)) {
                    this.IOAddressField = value;
                    this.RaisePropertyChanged("IOAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowLimit {
            get {
                return this.LowLimitField;
            }
            set {
                if ((this.LowLimitField.Equals(value) != true)) {
                    this.LowLimitField = value;
                    this.RaisePropertyChanged("LowLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnScan {
            get {
                return this.OnScanField;
            }
            set {
                if ((this.OnScanField.Equals(value) != true)) {
                    this.OnScanField = value;
                    this.RaisePropertyChanged("OnScan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScanTime {
            get {
                return this.ScanTimeField;
            }
            set {
                if ((this.ScanTimeField.Equals(value) != true)) {
                    this.ScanTimeField = value;
                    this.RaisePropertyChanged("ScanTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriorityType", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Models")]
    public enum PriorityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Models")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DriverType", Namespace="http://schemas.datacontract.org/2004/07/SCADACore.Models")]
    public enum DriverType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RealTime = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cosine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ramp = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CoreReportServiceRef.IReportService")]
    public interface IReportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetMostRecentTagReports", ReplyAction="http://tempuri.org/IReportService/GetMostRecentTagReportsResponse")]
        Trending.CoreReportServiceRef.TagReport[] GetMostRecentTagReports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetMostRecentTagReports", ReplyAction="http://tempuri.org/IReportService/GetMostRecentTagReportsResponse")]
        System.Threading.Tasks.Task<Trending.CoreReportServiceRef.TagReport[]> GetMostRecentTagReportsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetMostRecentAlarmReports", ReplyAction="http://tempuri.org/IReportService/GetMostRecentAlarmReportsResponse")]
        Trending.CoreReportServiceRef.AlarmReport[] GetMostRecentAlarmReports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetMostRecentAlarmReports", ReplyAction="http://tempuri.org/IReportService/GetMostRecentAlarmReportsResponse")]
        System.Threading.Tasks.Task<Trending.CoreReportServiceRef.AlarmReport[]> GetMostRecentAlarmReportsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IReportService/CreateAlarmReport")]
        void CreateAlarmReport(Trending.CoreReportServiceRef.AlarmReport alarmReport);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IReportService/CreateAlarmReport")]
        System.Threading.Tasks.Task CreateAlarmReportAsync(Trending.CoreReportServiceRef.AlarmReport alarmReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetAlarmReportsInTimePeriod", ReplyAction="http://tempuri.org/IReportService/GetAlarmReportsInTimePeriodResponse")]
        Trending.CoreReportServiceRef.AlarmReport[] GetAlarmReportsInTimePeriod(int startPeriod, int endPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetAlarmReportsInTimePeriod", ReplyAction="http://tempuri.org/IReportService/GetAlarmReportsInTimePeriodResponse")]
        System.Threading.Tasks.Task<Trending.CoreReportServiceRef.AlarmReport[]> GetAlarmReportsInTimePeriodAsync(int startPeriod, int endPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetAlarmReportsForPriority", ReplyAction="http://tempuri.org/IReportService/GetAlarmReportsForPriorityResponse")]
        Trending.CoreReportServiceRef.AlarmReport[] GetAlarmReportsForPriority(Trending.CoreReportServiceRef.PriorityType priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetAlarmReportsForPriority", ReplyAction="http://tempuri.org/IReportService/GetAlarmReportsForPriorityResponse")]
        System.Threading.Tasks.Task<Trending.CoreReportServiceRef.AlarmReport[]> GetAlarmReportsForPriorityAsync(Trending.CoreReportServiceRef.PriorityType priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagReportsInTimePeriod", ReplyAction="http://tempuri.org/IReportService/GetTagReportsInTimePeriodResponse")]
        Trending.CoreReportServiceRef.TagReport[] GetTagReportsInTimePeriod(int startPeriod, int endPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagReportsInTimePeriod", ReplyAction="http://tempuri.org/IReportService/GetTagReportsInTimePeriodResponse")]
        System.Threading.Tasks.Task<Trending.CoreReportServiceRef.TagReport[]> GetTagReportsInTimePeriodAsync(int startPeriod, int endPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagReportsForTagType", ReplyAction="http://tempuri.org/IReportService/GetTagReportsForTagTypeResponse")]
        Trending.CoreReportServiceRef.TagReport[] GetTagReportsForTagType(Trending.CoreReportServiceRef.IOType tagType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagReportsForTagType", ReplyAction="http://tempuri.org/IReportService/GetTagReportsForTagTypeResponse")]
        System.Threading.Tasks.Task<Trending.CoreReportServiceRef.TagReport[]> GetTagReportsForTagTypeAsync(Trending.CoreReportServiceRef.IOType tagType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagReportsForTagName", ReplyAction="http://tempuri.org/IReportService/GetTagReportsForTagNameResponse")]
        Trending.CoreReportServiceRef.TagReport[] GetTagReportsForTagName(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetTagReportsForTagName", ReplyAction="http://tempuri.org/IReportService/GetTagReportsForTagNameResponse")]
        System.Threading.Tasks.Task<Trending.CoreReportServiceRef.TagReport[]> GetTagReportsForTagNameAsync(string tagName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportServiceChannel : Trending.CoreReportServiceRef.IReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportServiceClient : System.ServiceModel.ClientBase<Trending.CoreReportServiceRef.IReportService>, Trending.CoreReportServiceRef.IReportService {
        
        public ReportServiceClient() {
        }
        
        public ReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Trending.CoreReportServiceRef.TagReport[] GetMostRecentTagReports() {
            return base.Channel.GetMostRecentTagReports();
        }
        
        public System.Threading.Tasks.Task<Trending.CoreReportServiceRef.TagReport[]> GetMostRecentTagReportsAsync() {
            return base.Channel.GetMostRecentTagReportsAsync();
        }
        
        public Trending.CoreReportServiceRef.AlarmReport[] GetMostRecentAlarmReports() {
            return base.Channel.GetMostRecentAlarmReports();
        }
        
        public System.Threading.Tasks.Task<Trending.CoreReportServiceRef.AlarmReport[]> GetMostRecentAlarmReportsAsync() {
            return base.Channel.GetMostRecentAlarmReportsAsync();
        }
        
        public void CreateAlarmReport(Trending.CoreReportServiceRef.AlarmReport alarmReport) {
            base.Channel.CreateAlarmReport(alarmReport);
        }
        
        public System.Threading.Tasks.Task CreateAlarmReportAsync(Trending.CoreReportServiceRef.AlarmReport alarmReport) {
            return base.Channel.CreateAlarmReportAsync(alarmReport);
        }
        
        public Trending.CoreReportServiceRef.AlarmReport[] GetAlarmReportsInTimePeriod(int startPeriod, int endPeriod) {
            return base.Channel.GetAlarmReportsInTimePeriod(startPeriod, endPeriod);
        }
        
        public System.Threading.Tasks.Task<Trending.CoreReportServiceRef.AlarmReport[]> GetAlarmReportsInTimePeriodAsync(int startPeriod, int endPeriod) {
            return base.Channel.GetAlarmReportsInTimePeriodAsync(startPeriod, endPeriod);
        }
        
        public Trending.CoreReportServiceRef.AlarmReport[] GetAlarmReportsForPriority(Trending.CoreReportServiceRef.PriorityType priority) {
            return base.Channel.GetAlarmReportsForPriority(priority);
        }
        
        public System.Threading.Tasks.Task<Trending.CoreReportServiceRef.AlarmReport[]> GetAlarmReportsForPriorityAsync(Trending.CoreReportServiceRef.PriorityType priority) {
            return base.Channel.GetAlarmReportsForPriorityAsync(priority);
        }
        
        public Trending.CoreReportServiceRef.TagReport[] GetTagReportsInTimePeriod(int startPeriod, int endPeriod) {
            return base.Channel.GetTagReportsInTimePeriod(startPeriod, endPeriod);
        }
        
        public System.Threading.Tasks.Task<Trending.CoreReportServiceRef.TagReport[]> GetTagReportsInTimePeriodAsync(int startPeriod, int endPeriod) {
            return base.Channel.GetTagReportsInTimePeriodAsync(startPeriod, endPeriod);
        }
        
        public Trending.CoreReportServiceRef.TagReport[] GetTagReportsForTagType(Trending.CoreReportServiceRef.IOType tagType) {
            return base.Channel.GetTagReportsForTagType(tagType);
        }
        
        public System.Threading.Tasks.Task<Trending.CoreReportServiceRef.TagReport[]> GetTagReportsForTagTypeAsync(Trending.CoreReportServiceRef.IOType tagType) {
            return base.Channel.GetTagReportsForTagTypeAsync(tagType);
        }
        
        public Trending.CoreReportServiceRef.TagReport[] GetTagReportsForTagName(string tagName) {
            return base.Channel.GetTagReportsForTagName(tagName);
        }
        
        public System.Threading.Tasks.Task<Trending.CoreReportServiceRef.TagReport[]> GetTagReportsForTagNameAsync(string tagName) {
            return base.Channel.GetTagReportsForTagNameAsync(tagName);
        }
    }
}
